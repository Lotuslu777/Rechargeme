// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 用户模型
model User {
  id            String         @id @default(cuid())
  name          String?
  email         String?        @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  accounts      Account[]
  sessions      Session[]
  favorites     Favorite[]
  history       UsageHistory[]
  recharges     Recharge[]     // 用户创建的休息方式
}

// NextAuth 相关模型
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// 休息方式模型
model Recharge {
  id          String         @id @default(cuid())
  title       String
  description String
  duration    Int            // 持续时间（分钟）
  steps       String[]       // 操作步骤
  category    String         // 类别：呼吸法/身体放松/感官刺激/微冥想/轻娱乐
  tags        String[]       // 标签，如"睡前用"
  imageUrl    String?        // 可选图片
  audioUrl    String?        // 可选音频
  isPublic    Boolean        @default(false)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  creatorId   String         // 创建者ID
  creator     User           @relation(fields: [creatorId], references: [id])
  favorites   Favorite[]
  history     UsageHistory[]
}

// 收藏模型
model Favorite {
  id         String   @id @default(cuid())
  userId     String
  rechargeId String
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  recharge   Recharge @relation(fields: [rechargeId], references: [id], onDelete: Cascade)

  @@unique([userId, rechargeId])
}

// 使用历史
model UsageHistory {
  id         String   @id @default(cuid())
  userId     String
  rechargeId String
  usedAt     DateTime @default(now())
  duration   Int      // 实际使用时长（秒）
  rating     Int?     // 评分 1-5
  feedback   String?  // 反馈内容
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  recharge   Recharge @relation(fields: [rechargeId], references: [id], onDelete: Cascade)
} 